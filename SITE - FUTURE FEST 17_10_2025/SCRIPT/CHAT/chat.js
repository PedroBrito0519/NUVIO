// ===================== CONFIGURA√á√ÉO DO CHATBOT NUVY =====================

// Importa a chave de API do arquivo config.js
// (certifique-se de incluir <script src="config.js"></script> antes deste script no HTML)
const MODEL_IMAGE = "https://cdn.jsdelivr.net/gh/google/generative-ai/images/gemini-icon.png"; // imagem do modelo Gemini

// Exibe o chat quando o bot√£o √© clicado
document.getElementById('chat-button').addEventListener('click', function () {
  const chatContainer = document.getElementById('chat-container');
  const closeChatButton = document.getElementById('close-chat-button');
  if (chatContainer.style.display === 'none' || chatContainer.style.display === '') {
    chatContainer.style.display = 'block';
    closeChatButton.style.display = 'inline-block';
    showInitialOptions();
  } else {
    chatContainer.style.display = 'none';
    closeChatButton.style.display = 'none';
  }
});

// ===================== OP√á√ïES INICIAIS =====================
function showInitialOptions() {
  const mensagem = 'Ol√°! Sou o Nuvy Bot ü§ñ Como posso te ajudar hoje? Escolha uma das √°reas abaixo:';
  const opcoes = ['üóÇÔ∏è Armazenamento de Arquivos', 'üìÖ Organiza√ß√£o de Rotina', 'üíé Planos', 'üìû Contato'];

  addMessage(mensagem, 'bot');
  opcoes.forEach(option => addOptionButton(option));
}

// ===================== RESPOSTAS PRINCIPAIS =====================
function handleOptionClick(opcaoTexto) {
  addMessage(opcaoTexto, 'user');

  switch (opcaoTexto) {
    case 'üóÇÔ∏è Armazenamento de Arquivos':
      showArmazenamento();
      break;
    case 'üìÖ Organiza√ß√£o de Rotina':
      showOrganizacao();
      break;
    case 'üíé Planos':
      showPlanos();
      break;
    case 'üìû Contato':
      showContato();
      break;
    case 'üìß Email':
      showEmail();
      break;
    case 'üìû Telefone':
      showTelefone();
      break;
    case 'üí† Plano Gr√°tis':
      showPlanoGratis();
      break;
    case 'ü•à Plano Prata':
      showPlanoPrata();
      break;
    case 'üíé Plano Diamante':
      showPlanoDiamante();
      break;
    default:
      // Envia mensagem para o Gemini
      handleGeminiResponse(opcaoTexto);
  }
}

// ===================== CONTE√öDOS =====================
function showArmazenamento() {
  const message = 'üìÅ O Nuvio permite que voc√™ **armazene arquivos com seguran√ßa na nuvem**, podendo organiz√°-los em pastas personalizadas e acess√°-los de qualquer dispositivo. Nossa tecnologia garante **criptografia e backups autom√°ticos**.';
  addMessage(message, 'bot');
}

function showOrganizacao() {
  const message = 'üß© Com a fun√ß√£o **Organiza√ß√£o de Rotina**, voc√™ pode criar tarefas, definir prioridades e acompanhar seu progresso di√°rio. √â como ter um **Notion dentro do Nuvio**, tudo integrado com seus arquivos.';
  addMessage(message, 'bot');
}

function showPlanos() {
  const message = 'üíé Escolha um dos nossos planos para saber mais:';
  const opcoes = ['üí† Plano Gr√°tis', 'ü•à Plano Prata', 'üíé Plano Diamante'];
  addMessage(message, 'bot');
  opcoes.forEach(option => addOptionButton(option));
}

function showContato() {
  const message = 'üìû Escolha uma forma de contato:';
  const opcoes = ['üìß Email', 'üìû Telefone'];
  addMessage(message, 'bot');
  opcoes.forEach(option => addOptionButton(option));
}

// Planos
function showPlanoGratis() {
  const message = 'üí† **Plano Gr√°tis:** ideal para iniciantes! Inclui 1GB de armazenamento, notas ilimitadas e sincroniza√ß√£o com 1 dispositivo.';
  addMessage(message, 'bot');
}

function showPlanoPrata() {
  const message = 'ü•à **Plano Prata:** mais espa√ßo e recursos! 100GB de armazenamento, integra√ß√£o com calend√°rio e colabora√ß√£o em tempo real.';
  addMessage(message, 'bot');
}

function showPlanoDiamante() {
  const message = 'üíé **Plano Diamante:** o pacote completo para equipes e empresas. Armazenamento ilimitado, automa√ß√µes avan√ßadas e suporte priorit√°rio 24/7.';
  addMessage(message, 'bot');
}

// Contato
function showEmail() {
  const message = 'üìß Entre em contato pelo e-mail: **contato@nuvio.com.br**';
  addMessage(message, 'bot');
}

function showTelefone() {
  const message = 'üìû Nosso n√∫mero: **(11) 94315-7970**';
  addMessage(message, 'bot');
}

// ===================== CHAT GEMINI =====================
async function handleGeminiResponse(userText) {
  addModelAvatar();

  try {
    const response = await fetch(
      "https://generativelanguage.googleapis.com/v1beta/models/gemini-1.5-flash:generateContent?key=" + GEMINI_API_KEY,
      {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({
          contents: [{ parts: [{ text: userText }] }]
        })
      }
    );

    const data = await response.json();
    const reply = data.candidates?.[0]?.content?.parts?.[0]?.text || "Desculpe, n√£o consegui entender sua pergunta.";
    addMessage(reply, 'bot');

  } catch (error) {
    addMessage("‚ö†Ô∏è Erro ao conectar √† API Gemini.", 'bot');
    console.error(error);
  }
}

// Adiciona a imagem do modelo Gemini
function addModelAvatar() {
  const chatBox = document.getElementById('messages');
  const img = document.createElement('img');
  img.src = MODEL_IMAGE;
  img.alt = "Gemini Model";
  img.style.width = "45px";
  img.style.borderRadius = "50%";
  img.style.marginBottom = "5px";
  chatBox.appendChild(img);
  chatBox.scrollTop = chatBox.scrollHeight;
}

// ===================== ELEMENTOS DO CHAT =====================
function addMessage(message, sender) {
  const chatBox = document.getElementById('messages');
  const messageElement = document.createElement('div');
  messageElement.className = sender === 'user' ? 'user-message' : 'bot-message';
  messageElement.textContent = message;
  chatBox.appendChild(messageElement);
  chatBox.scrollTop = chatBox.scrollHeight;
}

function addOptionButton(text) {
  const chatBox = document.getElementById('messages');
  const button = document.createElement('div');
  button.className = 'option-button';
  button.textContent = text;
  button.addEventListener('click', () => handleOptionClick(text));
  chatBox.appendChild(button);
  chatBox.scrollTop = chatBox.scrollHeight;
}

// ===================== CONTROLES =====================
function resetChat() {
  document.getElementById('messages').innerHTML = '';
  showInitialOptions();
}

function closeChat() {
  document.getElementById('chat-container').style.display = 'none';
  document.getElementById('close-chat-button').style.display = 'none';
}

// Envio de mensagem via Enter
document.getElementById('user-input').addEventListener('keydown', function (e) {
  if (e.key === 'Enter') sendMessage();
});

function sendMessage() {
  const input = document.getElementById('user-input');
  const text = input.value.trim();
  if (text === "") return;
  addMessage(text, 'user');
  input.value = "";
  handleGeminiResponse(text);
}
